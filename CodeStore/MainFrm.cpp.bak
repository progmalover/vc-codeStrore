// MainFrm.cpp : CMainFrame 类的实现
//

#include "stdafx.h"
#include "tabdoc.h"

#include "MainFrm.h"
#include ".\mainfrm.h"

#ifdef _DEBUG
#define new DEBUG_NEW
#endif


// CMainFrame

IMPLEMENT_DYNCREATE(CMainFrame, CFrameWnd)

BEGIN_MESSAGE_MAP(CMainFrame, CFrameWnd)
	ON_WM_CREATE()
	ON_WM_SIZE()
	ON_COMMAND(ID_FILE_NEW, OnFileNew)
//	ON_COMMAND(ID_VIEW_STATUS_BAR, )
ON_COMMAND(IDR_tabdocTYPE, Ontabdoctype)
ON_UPDATE_COMMAND_UI(IDR_tabdocTYPE, OnUpdatetabdoctype)
//ON_COMMAND(ID_VIEW_TOOLBAR, OnViewToolbar)
//ON_UPDATE_COMMAND_UI(ID_VIEW_TOOLBAR, OnUpdateViewToolbar)
//ON_UPDATE_COMMAND_UI(ID_VIEW_TOOLBAR, OnUpdateViewToolbar)
//ON_UPDATE_COMMAND_UI(ID_VIEW_TOOLBAR, OnUpdateViewToolbar)
END_MESSAGE_MAP()

static UINT indicators[] =
{
	ID_SEPARATOR,           // 状态行指示器
	ID_INDICATOR_CAPS,
	ID_INDICATOR_NUM,
	ID_INDICATOR_SCRL,
};


// CMainFrame 构造/析构

CMainFrame::CMainFrame()
{
	// TODO: 在此添加成员初始化代码
}

CMainFrame::~CMainFrame()
{
}


int CMainFrame::OnCreate(LPCREATESTRUCT lpCreateStruct)
{
	if (CFrameWnd::OnCreate(lpCreateStruct) == -1)
		return -1;
	
	
	  if (!m_wndToolBar.Create(this,WS_DLGFRAME|WS_CHILD|WS_BORDER |
		  WS_THICKFRAME |WS_VISIBLE|CBRS_TOP|TBSTYLE_TOOLTIPS  ) ||
		 !m_wndToolBar.LoadToolBar(IDR_MAINFRAME))

	{
		TRACE0("未能创建工具栏\n");
		return -1;      // 未能创建
	}


	//m_wndToolBar.EnableDocking(CBRS_ALIGN_ANY);
	//EnableDocking(CBRS_ALIGN_ANY);
	//DockControlBar(&m_wndToolBar, AFX_IDW_DOCKBAR_TOP);


	if (!m_wndStatusBar.Create(this) ||
		!m_wndStatusBar.SetIndicators(indicators,
		  sizeof(indicators)/sizeof(UINT)))
	{
		TRACE0("未能创建状态栏\n");
		return -1;      // 未能创建
	}

	 


	m_ImageList.Create(MAKEINTRESOURCE(IDB_IMAGELIST), 13, 3, RGB(0,255,0));
	m_mCtrlBar.SetBtnImageList(&m_ImageList); 

	if (!m_mCtrlBar.Create(this, CG_ID_VIEW_WORKSPACE ,
		_T("Workspace"), CSize(220,200)))
	{
		TRACE0("Failed to create dialog bar m_wndWorkspace\n");
		return -1;		// fail to create
	}

	m_mCtrlBar.SetBarStyle(m_mCtrlBar.GetBarStyle() |
		CBRS_TOOLTIPS | CBRS_FLYBY | CBRS_SIZE_DYNAMIC);

	m_mCtrlBar.EnableDocking(CBRS_ALIGN_ANY);
	EnableDocking(CBRS_ALIGN_ANY);
	DockControlBar(&m_mCtrlBar, AFX_IDW_DOCKBAR_RIGHT);

	
    m_TabTemp.ShowWindow(TRUE);
	return 0;
}

BOOL CMainFrame::PreCreateWindow(CREATESTRUCT& cs)
{
	if( !CFrameWnd::PreCreateWindow(cs) )
		return FALSE;
	// TODO: 在此处通过修改 CREATESTRUCT cs 来修改窗口类或
	// 样式
    cs.style |=WS_DLGFRAME   ;// ~WS_THICKFRAME;
	return TRUE;
}


// CMainFrame 诊断

#ifdef _DEBUG
void CMainFrame::AssertValid() const
{
	CFrameWnd::AssertValid();
}

void CMainFrame::Dump(CDumpContext& dc) const
{
	CFrameWnd::Dump(dc);
}

#endif //_DEBUG


// CMainFrame 消息处理程序


BOOL CMainFrame::OnCreateClient(LPCREATESTRUCT lpcs, CCreateContext* pContext)
{
	// TODO: Add your specialized code here and/or call the base class
	m_TabTemp.Create(WS_CHILD|WS_VISIBLE |WS_CLIPCHILDREN|
		WS_CLIPSIBLINGS|TCS_FLATBUTTONS  ,CRect(0,0,0,0),this,IDC_TABTEMP);
	//m_TabTemp.ModifyStyle(0,TCS_EX_FLATSEPARATORS ,0);
	return CFrameWnd::OnCreateClient(lpcs, pContext);
}

void CMainFrame::OnSize(UINT nType, int cx, int cy)
{
	
	CFrameWnd::OnSize(nType, cx, cy);
	CacalLayout();
}

void CMainFrame::OnFileNew()
{
	// char *p = "new item";
    // m_TabTemp.InsertItem(0,p);
}

void CMainFrame::RecalcLayout(BOOL bNotify)
{
	// TODO: Add your specialized code here and/or call the base class
	CFrameWnd::RecalcLayout(bNotify);  
	  CacalLayout();
}

BOOL CMainFrame::OnChildNotify(UINT message, WPARAM wParam, LPARAM lParam, LRESULT* pLResult)
{
	// TODO: Add your specialized code here and/or call the base class
	
	return CFrameWnd::OnChildNotify(message, wParam, lParam, pLResult);
}

void CMainFrame::CacalLayout(void)
{
	
	if(m_TabTemp.GetSafeHwnd()!=NULL)
	{
		CRect  DskRect,usedRect;
		GetClientRect(&DskRect);

		CWnd *pChild;
		pChild = GetWindow(GW_CHILD);
		while(pChild)
		{

			if(   pChild !=  &m_TabTemp)
			{
				pChild->GetWindowRect(&usedRect);
				ScreenToClient(&usedRect);

				DskRect.SubtractRect(&DskRect,&usedRect);

			}
			pChild = pChild->GetWindow(GW_HWNDNEXT);
		}
		m_TabTemp.MoveWindow(&DskRect);
	}
}

void CMainFrame::Ontabdoctype()
{
	if(m_mCtrlBar.GetStyle() & WS_VISIBLE)
			m_mCtrlBar.ShowWindow(FALSE);
	else
		m_mCtrlBar.ShowWindow(SW_SHOW);
	
}

void CMainFrame::OnUpdatetabdoctype(CCmdUI *pCmdUI)
{
	// TODO: Add your command update UI handler code here

		pCmdUI->SetCheck((m_mCtrlBar.GetStyle() & WS_VISIBLE) != 0);
		
		pCmdUI->ContinueRouting();
}



